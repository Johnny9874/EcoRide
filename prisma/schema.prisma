  // prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  pseudo    String
  role      Role     @default(USER)
  credits   Int      @default(20)
  createdAt DateTime @default(now())

  preferences Preference[]
  vehicles      Vehicle[]
  reservations  Reservation[]
  carpools      Carpool[]      @relation("Driver")
}

model Vehicle {
  id         String   @id @default(uuid())
  brand      String
  model      String
  energy     String
  color      String
  plate      String   @unique
  seats      Int
  createdAt  DateTime @default(now())

  ownerId    String
  owner      User     @relation(fields: [ownerId], references: [id])

  carpools   Carpool[]
}

model Carpool {
  id           String   @id @default(uuid())
  from         String
  to           String
  date         DateTime
  price        Float
  isEco        Boolean
  seatsTotal   Int
  seatsLeft    Int
  createdAt    DateTime @default(now())

  driverId     String
  driver       User     @relation("Driver", fields: [driverId], references: [id])

  vehicleId    String
  vehicle      Vehicle  @relation(fields: [vehicleId], references: [id])

  reservations Reservation[]

  status CarpoolStatus @default(PLANNED)
}

model Reservation {
  id         String   @id @default(uuid())
  userId     String
  feedback Feedback?
  user       User     @relation(fields: [userId], references: [id])

  carpoolId  String
  carpool    Carpool  @relation(fields: [carpoolId], references: [id])

  createdAt  DateTime @default(now())
}

model Preference {
  id        String   @id @default(uuid())
  key       String
  value     String

  driverId  String
  driver    User     @relation(fields: [driverId], references: [id])
}

model Feedback {
  id          String   @id @default(uuid())
  rating      Int
  comment     String
  status      FeedbackStatus @default(PENDING)
  createdAt   DateTime @default(now())

  reservationId String  @unique
  reservation   Reservation @relation(fields: [reservationId], references: [id])
}

enum FeedbackStatus {
  PENDING
  APPROVED
  REJECTED
  REPORTED
}

enum CarpoolStatus {
  PLANNED
  ONGOING
  COMPLETED
  CANCELLED
}

enum Role {
  USER
  EMPLOYEE
  ADMIN
}
